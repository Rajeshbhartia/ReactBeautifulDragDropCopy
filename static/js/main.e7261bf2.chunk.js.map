{"version":3,"sources":["Dialog.js","FtText.js","FtNumber.js","DragAndDropRBD.js","App.js","index.js"],"names":["Dialog","MDCDialog","document","querySelector","open","className","role","aria-modal","aria-labelledby","aria-describedby","id","this","props","dialogHeader","children","type","data-mdc-dialog-action","onClick","Component","FtText","componentDidMount","textInputRef","addEventListener","onEnterKeyPress","map","call","querySelectorAll","el","MDCTextField","MDCFloatingLabel","componentDidUpdate","prevProps","fieldValue","setState","componentWillUnmount","removeEventListener","event","preventDefault","keyCode","getFieldValue","state","setFieldValue","value","onChange","e","target","fieldName","fieldType","defaultValue","label","mandatory","labelClass","showLabel","ref","node","inputContainerRef","placeholder","placeHolder","required","elem","htmlFor","replace","FtNumber","numberRef","evt","which","name","COLLECTION","uuid","reorder","list","startIndex","endIndex","console","log","splice","removed","copy","source","destination","droppableSource","droppableDestination","item","index","Copyable","droppableId","isDropDisabled","provided","snapshot","innerRef","items","key","draggableId","Fragment","draggableProps","dragHandleProps","style","isDragging","Shop","ShoppingBag","DragAndDropRBD","shoppingBagItems1","isDialogOpen","result","onDragEnd","length","handleClick","display","height","width","overflow","App","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.e7261bf2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {MDCDialog} from '@material/dialog';\n\nclass Dialog extends Component {\n    componentDidMount() {\n        const dialog = new MDCDialog(document.querySelector('.mdc-dialog'));\n        dialog.open()\n    }\n    \n    render() {\n        return (\n            <div className=\"mdc-dialog\"\n                role=\"alertdialog\"\n                aria-modal=\"true\"\n                aria-labelledby=\"my-dialog-title\"\n                aria-describedby=\"my-dialog-content\">\n                <div className=\"mdc-dialog__container\">\n                    <div className=\"mdc-dialog__surface\">\n   \n                        <h2 className=\"mdc-dialog__title\" id=\"my-dialog-title\">\n                            {this.props.dialogHeader}\n                        </h2>\n                        <div className=\"mdc-dialog__content\" id=\"my-dialog-content\">\n                           {this.props.children}\n                        </div>\n                        <footer className=\"mdc-dialog__actions\">\n                            <button type=\"button\" className=\"mdc-button mdc-dialog__button\" data-mdc-dialog-action=\"no\" onClick={()=>{this.props.onClick(\"no\")}}>\n                                <span className=\"mdc-button__label\">No</span>\n                            </button>\n                            <button type=\"button\" className=\"mdc-button mdc-dialog__button\" data-mdc-dialog-action=\"yes\" onClick={()=>{this.props.onClick(\"yes\")}}>\n                                <span className=\"mdc-button__label\">Yes</span>\n                            </button>\n                        </footer>\n                    </div>\n                </div>\n                <div className=\"mdc-dialog__scrim\"></div>\n            </div>\n        );\n    }\n}\n\nexport default Dialog;","/**\n * Author: Kaisar, last modified: 14-11-2019\n * Modified: uttam, last modified: 24-12-2019\n * Description: Class component for taking text Input\n * Mandatory props:  No mandatory props\n * Optional props: onEnterKeyPress(event), onChange(fieldName, fieldValue, fieldType) as function & mandatory as boolean & label, \n                   defaultValue, fieldType, fieldName, fieldValue, placeHolder as string, showLabel as bool\n * Test file: PROJECT_ROOT/src/sgf/testings/fieldTypes/FtText.test.js\n */\n\nimport React, { Component } from \"react\";\nimport { MDCTextField } from \"@material/textfield\";\nimport { MDCFloatingLabel } from \"@material/floating-label\";\nimport PropTypes from \"prop-types\";\n\nclass FtText extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fieldValue: this.props.fieldValue || this.props.defaultValue || \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.textInputRef) {\n      this.textInputRef.addEventListener(\"keyup\", this.onEnterKeyPress);\n    }\n    [].map.call(document.querySelectorAll(\".mdc-text-field\"), function (el) {\n      return new MDCTextField(el);\n    });\n\n    [].map.call(document.querySelectorAll(\".mdc-floating-label\"), function (el) {\n      return new MDCFloatingLabel(el);\n    });\n  };\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.fieldValue !== this.props.fieldValue) {\n      this.setState({\n        fieldValue: this.props.fieldValue\n      })\n    }\n  }\n  componentWillUnmount = () => {\n    if (this.textInputRef) {\n      this.textInputRef.removeEventListener(\"keyup\", this.onEnterKeyPress);\n    }\n  };\n\n  onEnterKeyPress = event => {\n    event.preventDefault();\n    if (event.keyCode === 13) {\n      if (this.props.onEnterKeyPress) {\n        this.props.onEnterKeyPress(event);\n      }\n    }\n  };\n\n  getFieldValue = () => {\n    return this.state.fieldValue;\n  };\n\n  setFieldValue = (value) => {\n    this.setState({\n      fieldValue: value\n    })\n  }\n\n  onChange = e => {\n    let fieldValue = e.target.value;\n    this.setState({\n      fieldValue: fieldValue\n    }, () => {\n      if (this.props.onChange) {\n        this.props.onChange(this.props.fieldName, fieldValue, this.props.fieldType);\n      }\n    });\n\n  };\n\n  render() {\n    let { label, mandatory } = this.props;\n\n    var labelClass = this.props.showLabel === false ? \"mdc-text-field--no-label\" : \"\"\n\n    return (\n      <div\n        className=\"fw-mb-8\"\n        ref={node => {\n          this.inputContainerRef = node;\n        }}\n      >\n        <div className={\"mdc-text-field fw-text-input \" + labelClass}>\n          <input\n            type=\"text\"\n            className=\"mdc-text-field__input fw-typography--body2\"\n            // name={label || \"Text\"}\n            value={this.state.fieldValue}\n            id={label || \"Text\"}\n            placeholder={this.props.placeHolder || \"\"}\n            onChange={this.onChange}\n            required={mandatory || false}\n            ref={elem => this.textInputRef = elem}\n          />\n          {this.props.showLabel !== false && (\n            //this div is added as the lebel didnot work in browser autofill \n            <div className=\"mdc-notched-outline__notch\">\n              <label\n                htmlFor={label || \"Text\"}\n                className=\"fw-typography--body2 mdc-floating-label fw-text-label\"\n              >\n                {label ? label.replace(/_/gi, \" \") : \"Text\"}\n              </label>\n            </div>\n          )}\n          <div className=\"mdc-line-ripple\" />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nFtText.propTypes = {\n  onEnterKeyPress: PropTypes.func,\n  onChange: PropTypes.func,\n  mandatory: PropTypes.bool,\n  label: PropTypes.string,\n  defaultValue: PropTypes.string,\n  fieldType: PropTypes.string,\n  fieldName: PropTypes.string,\n  fieldValue: PropTypes.string,\n  placeHolder: PropTypes.string,\n  showLabel: PropTypes.bool\n};\n\nexport default FtText;\n","/**\n * Author: uttam, last modified: 07-11-2019\n * Modified: Kaisar, last modified: 14-11-2019\n * Modified: uttam, last modified: 12-12-2019 \n * Description: Class component for taking Number Input\n * Mandatory props: No mandatory props\n * Optional props: onEnterKeyPress(event), onChange(fieldName, fieldValue, fieldType) as function,\n                   mandatory as bool & fieldValue, fieldName, fieldType, label, placeHolder,\n                   defaultValue as string, showLabel as boolean\n * Test file: PROJECT_ROOT/src/sgf/testings/fieldTypes/FtNumber.test.js\n */\n\nimport React, { Component } from \"react\";\nimport { MDCTextField } from \"@material/textfield\";\nimport { MDCFloatingLabel } from \"@material/floating-label\";\nimport PropTypes from \"prop-types\";\n\nclass FtNumber extends Component {\n  constructor(props) {\n    super(props);\n    const { fieldValue, defaultValue } = this.props;\n    this.state = {\n      fieldValue: fieldValue || defaultValue || \"\"\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.numberRef) {\n      this.numberRef.addEventListener(\"keypress\", function (evt) {\n        if ((evt.which !== 8 && evt.which !== 0 && evt.which < 48) || evt.which > 57) {\n          evt.preventDefault();\n        }\n      });\n      this.numberRef.addEventListener(\"keyup\", this.onEnterKeyPress);\n    }\n\n    [].map.call(document.querySelectorAll(\".mdc-text-field\"), function (el) {\n      return new MDCTextField(el);\n    });\n\n    [].map.call(document.querySelectorAll(\".mdc-floating-label\"), function (el) {\n      return new MDCFloatingLabel(el);\n    });\n  };\n\n  componentWillUnmount = () => {\n    if (this.numberRef) {\n      this.numberRef.removeEventListener(\"keyup\", this.onEnterKeyPress);\n    }\n  };\n\n  onEnterKeyPress = event => {\n    event.preventDefault();\n    if (event.keyCode === 13) {\n      if (this.props.onEnterKeyPress) {\n        this.props.onEnterKeyPress(event);\n      }\n    }\n  };\n\n  getFieldValue = () => {\n    return this.state.fieldValue;\n  };\n\n  onChange = e => {\n    let fieldValue = e.target.value;\n    this.setState({\n      fieldValue: fieldValue\n    }, () => {\n      if (this.props.onChange) {\n        this.props.onChange(this.props.fieldName, fieldValue, this.props.fieldType);\n      }\n    });\n  };\n\n  render() {\n    let { label, mandatory } = this.props;\n    var labelClass = this.props.showLabel === false ? \"mdc-text-field--no-label\" : \"\"\n\n    return (\n      <div\n        className=\"fw-mb-8\"\n        ref={node => {\n          this.inputContainerRef = node;\n        }}\n      >\n        <div className={\"mdc-text-field fw-text-input \" + labelClass}>\n          <input\n            type=\"number\"\n            className=\"mdc-text-field__input fw-typography--body2\"\n            onChange={this.onChange}\n            value={this.state.fieldValue}\n            name={label ? label : \"number\"}\n            required={mandatory}\n            id={label ? label : \"number\"}\n            ref={node => this.numberRef = node}\n            placeholder={this.props.placeHolder || \"\"}\n          />\n          {this.props.showLabel !== false && (\n            <label\n              htmlFor={label ? label : \"number\"}\n              className=\"mdc-floating-label fw-typography--body2 fw-text-label\"\n            >\n              {label ? label.replace(/_/gi, \" \") : \"Number\"}\n            </label>\n          )}\n          <div className=\"mdc-line-ripple\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nFtNumber.propTypes = {\n  onEnterKeyPress: PropTypes.func,\n  onChange: PropTypes.func,\n  mandatory: PropTypes.bool,\n  label: PropTypes.string,\n  placeHolder: PropTypes.string,\n  fieldName: PropTypes.string,\n  fieldType: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number\n  ]),\n  fieldValue: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number\n  ]),\n  defaultValue: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number\n  ]),\n  showLabel: PropTypes.bool\n};\n\nexport default FtNumber;\n","// import React from \"react\";\nimport React, { Component } from 'react';\nimport { v4 as uuid } from \"uuid\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport \"./App.scss\";\nimport Dialog from './Dialog';\nimport FtText from './FtText';\nimport FtNumber from './FtNumber';\n\nconst COLLECTION = [\n    { id: uuid(), label: \"Text\" },\n    { id: uuid(), label: \"Email\" },\n    { id: uuid(), label: \"Number\" }\n];\n\nconst reorder = (list, startIndex, endIndex) => {\n    console.log(list, startIndex, endIndex)\n    const [removed] = list.splice(startIndex, 1);\n    list.splice(endIndex, 0, removed);\n    return list;\n};\n\nconst copy = (source, destination, droppableSource, droppableDestination) => {\n    const item = source[droppableSource.index];\n    destination.splice(droppableDestination.index, 0, { ...item, id: uuid() });\n    return destination;\n};\n\nfunction Copyable(props) {\n    return (\n        <Droppable droppableId={props.droppableId} isDropDisabled={true} className=\"\">\n            {(provided, snapshot) => (\n                <div ref={provided.innerRef} className={props.className}>\n                    {props.items.map((item, index) => (\n                        <Draggable key={item.id} draggableId={item.id} index={index}>\n                            {(provided, snapshot) => (\n                                <React.Fragment>\n                                    <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        style={provided.draggableProps.style}\n                                        className={snapshot.isDragging ? \"fw-single-box  dragging\" : \"fw-single-box \"}\n                                    >\n                                        {item.label}\n                                    </div>\n                                    {snapshot.isDragging && (\n                                        <div className=\"fw-single-box react-beatiful-dnd-copy fw-dragging\">{item.label}</div>\n                                    )}\n                                </React.Fragment>\n                            )}\n                        </Draggable>\n\n                    ))}\n                    {provided.placeholder}\n                </div>\n            )}\n        </Droppable>\n    );\n}\n\nfunction Shop(props) {\n    return <Copyable droppableId=\"SHOP\" className=\"fw-single-box-wrapper\" items={props.items} />;\n}\n\n\nfunction ShoppingBag(props) {\n    console.log(props)\n    return (\n        <Droppable droppableId={props.id}>\n            {(provided, snapshot) => {\n                console.log(snapshot)\n                return (\n                    <div ref={provided.innerRef} className=\"shopping-bag fw-box2-content-wrapper\">\n                        {props.items.map((item, index) => (\n                            <Draggable key={item.id} draggableId={item.id} index={index}>\n                                {(provided, snapshot) => (\n                                    <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        style={provided.draggableProps.style}\n                                        className=\"fw-box2-single-content\"\n                                    >\n                                        <div className=\"fw-box2-icon-wrapper\">\n                                            <i className=\"material-icons\">\n                                                settings_applications\n                                            </i>\n                                            <i className=\"material-icons\">\n                                                visibility\n                                            </i>\n                                            <i className=\"material-icons\">\n                                                delete\n                                            </i>\n                                        </div>\n                                        <div className=\"fw-box2-single-content-header\">\n                                            {/* <FtText label={item.label} /> */}\n                                            {item.label}\n                                        </div>\n                                        <div className=\"fw-box2-single-content-subheader\">\n                                            Hello 123\n                                        </div>\n                                        <div className=\"fw-box2-line\" />\n                                    </div>\n                                )}\n                            </Draggable>\n                        ))}\n                        {provided.placeholder}\n                    </div>\n                )\n            }\n            }\n        </Droppable>\n    );\n}\n\n\nclass DragAndDropRBD extends Component {\n\n    state = {\n        shoppingBagItems1: [],\n        isDialogOpen: false,\n        result: {}\n    }\n\n    onDragEnd = (result) => {\n        const { source, destination } = result;\n        console.log(source, destination, result)\n\n        let dest = { ...destination }\n        dest.index = this.state.shoppingBagItems1.length\n\n        if (!destination) {\n            return;\n        }\n\n        switch (source.droppableId) {\n            case \"BAG1\":\n                reorder(this.state.shoppingBagItems1, source.index, destination.index)\n                break;\n            case \"SHOP\":\n                this.setState({ isDialogOpen: true, result })\n                break;\n            default:\n                break;\n        }\n    }\n\n    handleClick = (name) => {\n        if (name === \"yes\") {\n            copy(COLLECTION, this.state.shoppingBagItems1, this.state.result.source, this.state.result.destination)\n        }\n        this.setState({ isDialogOpen: false })\n    }\n\n    render() {\n        return (\n            <div className=\"fw-json-form-wrapper\">\n\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                    <div className=\"fw-json-form-title\">\n                        Form1\n                    </div>\n                    <div className=\"fw-json-form-divider\" />\n                    <div className=\"fw-json-form-subtitle\">\n                        CRM > Forms\n                    </div>\n                    <div className=\"fw-box1\">\n                        <div className=\"fw-box1-title\">\n                            Field Types\n                        </div>\n                        <Shop items={COLLECTION} />\n                    </div>\n\n                    <div className=\"fw-box2 mdc-elevation--z6\" >\n                        <div className=\"fw-box2-title-wrapper\">\n                            <span className=\"fw-box2-title\">\n                                Selected Fields\n                            </span>\n                            <span className=\"fw-box2-preview\" onClick={() => { console.log(\"preview\") }}>\n                                Preview\n                            </span>\n                        </div>\n\n                        <div style={{ display: 'flex', height: \"600px\", width: \"700px\", overflow: 'auto', }}>\n                            <ShoppingBag items={this.state.shoppingBagItems1} id=\"BAG1\" />\n                        </div>\n                    </div>\n                </DragDropContext>\n                {this.state.isDialogOpen && (<Dialog onClick={this.handleClick} dialogHeader=\"Add Text Field\">\n                    <FtText label=\"Label name\" defaultValue=\"Text\" />\n                    <FtText label=\"Default Value\" />\n                    <FtText label=\"Helper Text\" />\n                    <FtNumber label=\"Maximum Character\" defaultValue={255} />\n                </Dialog>)}\n            </div>\n        );\n    }\n}\n\nexport default DragAndDropRBD;","import React, { Component } from 'react';\nimport DragAndDropRBD from './DragAndDropRBD';\n\nclass App extends Component {\n  // componentDidMount() {\n  //   let location = window.location.href\n  //   console.log(location)\n\n  //   document.addEventListener('DOMContentLoaded', function() {\n  //     // window.location.replace(\"http://www.google.com\");\n  //     // window.location.replace(\"http://localhost:3000/#\");\n  //  }, false);\n  // }\n\n  // componentDidMount() {\n  //   var xhttp = new XMLHttpRequest();\n  //   xhttp.onreadystatechange = function() {\n  //     if (this.readyState == 4 && this.status == 200) {\n  //       document.getElementById(\"demo\").innerHTML =\n  //       this.responseText;\n  //     }\n  //   };\n  //   xhttp.open(\"GET\", \"https://myaccount-dev.synopi.com:13443/signin\", true);\n  //   xhttp.send();\n  // }\n  \n  \n  render() {\n    return (\n      <div id=\"demo\">\n        <DragAndDropRBD />\n        {/* hello */}\n\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}